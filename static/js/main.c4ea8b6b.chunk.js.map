{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","hero","id","name","email","CardList","heroes","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredHeroes","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BACnB,mCAAML,EAAMI,KAAKE,KAAjB,OACA,kCAAKN,EAAMI,KAAKG,MAAhB,WCFKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,OAAOC,KAAK,SAAAN,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCLfM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCsCAG,E,kDAvCb,aAAc,IAAD,8BACX,gBAiBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAhBvC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAY,IAGd,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBART,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,OAAQmB,S,oBAO1C,WAAU,IAAD,EACyBC,KAAKP,MAA7Bb,EADD,EACCA,OAAQU,EADT,EACSA,YACVW,EAAiBrB,EAAOsB,QAAQ,SAAA3B,GAAI,OAAIA,EAAKE,KAAK0B,cAAcC,SAASd,EAAYe,wBAC3F,OACE,sBAAKjC,UAAU,MAAf,UACE,wCACA,cAAC,EAAD,CACEW,YAAY,gBACZC,aAAegB,KAAKhB,eACtB,cAAC,EAAD,CAAUJ,OAAQqB,W,GAjCRK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4ea8b6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt=\"hero\" src={`https://robohash.org/${props.hero.id}?set=set5&size=180x180`} />\r\n        <h2> {props.hero.name} </h2>\r\n        <p> {props.hero.email} </p>\r\n    </div>\r\n   \r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.heroes.map( hero => (\r\n            <Card key={hero.id} hero={hero} />\r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className='search'\r\n    type='search' \r\n    placeholder={ placeholder }\r\n    onChange={ handleChange }/>\r\n\r\n);","import React, { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      heroes: [],\n      searchField:''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json()\n      )\n      .then(users => this.setState({heroes: users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField : e.target.value})\n  }\n\n  render() {\n    const { heroes, searchField } = this.state;\n    const filteredHeroes = heroes.filter( hero => hero.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Heroes</h1>\n        <SearchBox \n          placeholder='search heroes' \n          handleChange={ this.handleChange } />\n        <CardList heroes={filteredHeroes} />\n      </div>\n    );\n\n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}